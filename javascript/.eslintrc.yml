# https://eslint.org/docs/rules/

extends: eslint:recommended
# plugins:
#   - recogni
parserOptions:
  ecmaVersion: 2021
  sourceType: module
  ecmaFeatures:
    jsx: true
env:
  browser: true
  node: true
  serviceworker: true
rules:
  # Custom rules
  # no-switch-statement: error
  # Possible Errors
  no-await-in-loop: warn
  no-console: warn
  no-constant-condition: warn
  no-control-regex: off
  no-empty:
    - warn
    - allowEmptyCatch: true
  no-extra-parens:
    - warn
    - all
    - nestedBinaryExpressions: false
      ignoreJSX: all
      enforceForArrowConditionals: false
      enforceForSequenceExpressions: false
      enforceForNewInMemberExpressions: false
  no-irregular-whitespace:
    - error
    - skipComments: true
      skipRegExps: true
      skipTemplates: true
  no-loss-of-precision: warn
  no-promise-executor-return: warn
  no-sparse-arrays: warn
  no-template-curly-in-string: warn
  no-unreachable-loop: warn
  no-unsafe-optional-chaining: error
  no-useless-backreference: error
  require-atomic-updates: error
  # Best Practices
  accessor-pairs: warn
  array-callback-return: error
  class-methods-use-this: error
  consistent-return: warn
  curly:
    - error
    - all
  default-param-last: error
  dot-location:
    - error
    - property
  eqeqeq: warn
  grouped-accessor-pairs: error
  no-alert: warn
  no-caller: error
  no-constructor-return: warn
  no-empty-function: warn
  no-eq-null: error
  no-eval: error
  no-extra-bind: warn
  no-floating-decimal: error
  no-implicit-globals: warn
  no-implied-eval: error
  no-invalid-this: warn
  no-iterator: error
  no-lone-blocks: warn
  no-loop-func: warn
  no-magic-numbers:
    - warn
    - ignoreArrayIndexes: true
      ignoreDefaultValues: true
  no-new-func: error
  no-new-wrappers: error
  no-param-reassign:
    - warn
    - props: false
  no-proto: error
  no-return-assign: error
  no-return-await: error
  no-script-url: warn
  no-self-compare: warn
  no-sequences: warn
  no-unmodified-loop-condition: warn
  no-useless-call: warn
  no-useless-return: warn
  no-void: error
  no-warning-comments:
    - warn
    - terms:
      - todo
  prefer-promise-reject-errors:
    - error
    - allowEmptyReject: true
  prefer-regex-literals:
    - error
    - disallowRedundantWrapping: true
  radix:
    - error
    - always
  require-await: warn
  require-unicode-regexp: warn
  wrap-iife:
    - error
    - inside
    - functionPrototypeMethods: true
  yoda:
    error
  # Style
  array-bracket-newline:
    - error
    - multiline: true
  array-bracket-spacing: error
  array-element-newline:
    - error
    - consistent
  block-spacing: error
  brace-style: error
  camelcase: error
  comma-dangle:
    - error
    - always-multiline
  comma-spacing: error
  comma-style: error
  computed-property-spacing: error
  consistent-this: warn
  eol-last:
    - error
    - always
  func-call-spacing: error
  func-names: error
  func-style: error
  function-call-argument-newline:
    - error
    - consistent
  function-paren-newline:
    - error
    - multiline-arguments
  implicit-arrow-linebreak: error
  indent:
    - error
    - 2
    - VariableDeclarator: first
      CallExpression:
        arguments: first

  jsx-quotes: error
  key-spacing: error
  keyword-spacing: error
  linebreak-style: error
  lines-between-class-members: error
  max-depth:
    - warn
    - max: 4
  max-len:
    - warn
    - ignorePattern: ^(import.+)|(const.+= require.+)
  max-statements-per-line: warn
  new-cap: error
  new-parens: error
  newline-per-chained-call: error
  no-array-constructor: error
  no-bitwise:
    - warn
    - int32Hint: true
  no-lonely-if: error
  no-multi-assign: error
  no-multiple-empty-lines:
    - error
    - max: 2
      maxEOF: 0
      maxBOF: 0
  no-new-object: error
  no-plusplus:
    - error
    - allowForLoopAfterthoughts: true
  no-tabs: error
  no-ternary: error
  no-trailing-spaces: error
  no-whitespace-before-property: error
  object-curly-newline:
    - error
    - ObjectExpression:
        consistent: true
      ObjectPattern: never
      ImportDeclaration: always
      ExportDeclaration: always
  object-curly-spacing: error
  object-property-newline: error
  one-var:
    - error
    - consecutive
  one-var-declaration-per-line:
    - error
    - always
  operator-assignment: error
  operator-linebreak:
    - error
    - before
  padded-blocks:
    - error
    - never
  # TODO: padding-line-between-statements
  prefer-exponentiation-operator: error
  prefer-object-spread: error
  quote-props:
    - error
    - consistent-as-needed
    - keywords: true
  quotes:
    - error
    - single
    - allowTemplateLiterals: true
  semi: error
  semi-spacing:
    - error
    - before: false
      after: true
  semi-style: error
  space-before-blocks: error
  space-before-function-paren: error
  space-in-parens: error
  space-unary-ops:
    - error
    - words: true
      nonwords: false
  template-tag-spacing: error
  # ES6
  arrow-body-style:
    - error
    - as-needed
    - requireReturnForObjectLiteral: true
  arrow-parens:
    - error
    - as-needed
    - requireForBlockBody: true
  arrow-spacing: error
  generator-star-spacing:
    - error
    - after
  no-duplicate-imports: error
  no-useless-computed-key: warn
  no-useless-constructor: warn
  no-useless-rename: error
  no-var: error
  object-shorthand: error
  prefer-arrow-callback: error
  prefer-const: error
  prefer-destructuring: error
  prefer-rest-params: error
  prefer-spread: error
  prefer-template: error
  rest-spread-spacing:
    - error
    - never
  sort-imports:
    - error
    - ignoreCase: false
      allowSeparatedGroups: true
  symbol-description: error
  template-curly-spacing: error
  yield-star-spacing:
    - error
    - after
  # Comments
  capitalized-comments:
    - warn
    - always
    - ignoreConsecutiveComments: true
  line-comment-position:
    - error
    - ignorePattern: '='
  lines-around-comment:
    - warn
    - beforeBlockComment: true
      beforeLineComment: true
      allowBlockStart: true
      allowClassStart: true
  multiline-comment-style: warn
  no-inline-comments:
    - error
    - ignorePattern: '='
  spaced-comment:
    - error
    - always
    - block:
        balanced: true
